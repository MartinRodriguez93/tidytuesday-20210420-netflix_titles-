app = dash.Dash(external_stylesheets=[dbc.themes.JOURNAL])

SIDEBAR_STYLE = {
    "position": "fixed",
    "top": 0,
    "left": 0,
    "bottom": 0,
    "width": "21rem",
    "padding": "2rem 1rem",
    "background-color": "#f8f9fa",
}

CONTENT_STYLE = {
    "margin-left": "21rem",
    "margin-right": "2rem",
    "padding": "2rem 1rem",
}

sidebar=html.Div(
                [html.H2("#tidytuesday", className="display-4"),
                html.Hr(),
                dbc.CardImg(src='/assets/nf-logo.jpg',
                            style={'height':'10%',
                                   'width':'80%',
                                   "margin-left": "2rem"}
                           ),
                dbc.Nav([html.Br(),
                         dbc.DropdownMenu(label="Overview",
                                          children=[dbc.DropdownMenuItem("Scope",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/",
                                                                         active="exact"),
                                                    dbc.DropdownMenuItem("Limitaciones",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-1",
                                                                         active="exact"),
                                                   ],
                                          color="#eb6864",
                                          toggle_style={'border':'1px rgba(0,0,0,0.15) solid'},
                                          direction="right"
                                         ),
                         html.Br(),
                         dbc.DropdownMenu(label="World",
                                          children=[dbc.DropdownMenuItem("Movies/TV Shows",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-2",
                                                                         active="exact"),
                                                    dbc.DropdownMenuItem("Titles per year",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-3",
                                                                         active="exact"),
                                                    dbc.DropdownMenuItem("Directors and Cast",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-4",
                                                                         active="exact"),
                                                    dbc.DropdownMenuItem("Average duration",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-5",
                                                                         active="exact"),
                                                    dbc.DropdownMenuItem("Ratings class",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-6",
                                                                         active="exact"),
                                                    dbc.DropdownMenuItem("Categories",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-7",
                                                                         active="exact"),
                                                    dbc.DropdownMenuItem("Titles per country",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-8",
                                                                         active="exact"),
                                                    dbc.DropdownMenuItem("Titles ratings",
                                                                         style={'backgroundColor': 'rgb(255,255,255)',
                                                                                'color':'black',
                                                                                'font-family': 'Arial Narrow',
                                                                                'font-weight':700},
                                                                         href="/page-9",
                                                                         active="exact")
                                                   ],
                                          color="#eb6864",
                                          toggle_style={'border':'1px rgba(0,0,0,0.15) solid'},
                                          direction="right"
                                         ),
                        ],
                        vertical=True,
                        pills=True
                       ),
               ],
               style=SIDEBAR_STYLE
               )

content = html.Div(id="page-content", style=CONTENT_STYLE)

app.layout = html.Div([dcc.Location(id="url"), sidebar, content])

@app.callback(Output("page-content", "children"), [Input("url", "pathname")])
def render_page_content(pathname):
    if pathname == "/":
        return html.Div(children=[html.H2("Netflix challenge: Scope", className="display-4"),
                                  html.Hr(),
                                  html.Div(children=[html.Li(['Data Analysis using Python based on the ',
                                                            html.Span('#tidytuesday challenge of 2021-04-21.',
                                                                      id="tooltip-target",
                                                                      style={"textDecoration": "underline",
                                                                             "cursor": "pointer"},
                                                                     )
                                                            ],
                                                             style={'color':'black'}
                                                           ),
                                                     dbc.Tooltip(
                                                                 html.A("Github #tidytuesday",
                                                                         href='https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-04-20/readme.md',
                                                                         style={'color':'white'}, 
                                                                         target="_blank"),
                                                                         autohide=False,
                                                                         target="tooltip-target",
                                                                         style={'backgroundColor': 'rgb(0,0,0)'},
                                                                ),
                                                    html.Br(),
                                                    html.Li([html.Span('Datasets:',
                                                                       style={"textDecoration": "underline"},
                                                                      ),
                                                             html.Span([' netflix_titles.csv dataset and ',
                                                                        html.Span('IMDB datasets.',
                                                                                  id="tooltip-imdb",
                                                                                  style={"textDecoration": "underline",
                                                                                         "cursor": "pointer"},
                                                                                 ),
                                                                       ],
                                                                      ),
                                                             dbc.Tooltip(
                                                                         html.A("IMDB datasets",
                                                                                 href='https://www.imdb.com/interfaces/',
                                                                                 style={'color':'black'}, 
                                                                                 target="_blank"),
                                                                                 autohide=False,
                                                                                 target="tooltip-imdb",
                                                                                 style={'backgroundColor': 'rgb(239,255,0)'},
                                                                        ),
                                                            ],
                                                           ),    
                                                    html.Br(),
                                                    html.Li([html.Span('Python libraries:',
                                                                       style={"textDecoration": "underline"},
                                                                      ),
                                                             html.Span(' pandas, json, plotly.express, matplotlib.pyplot, numpy, plotly.graph_objects and wordcloud.')
                                                            ],
                                                           ),
                                                    html.Br(),
                                                    html.Li(['Dash developed by ',
                                                            html.Span('Martín Ignacio Rodríguez',
                                                                      id="tooltip-ln",
                                                                      style={"textDecoration": "underline",
                                                                             "cursor": "pointer"},
                                                                     )
                                                            ],
                                                             style={'color':'black'}
                                                           ),
                                                     dbc.Tooltip(
                                                                 html.A("Linkedin Profile",
                                                                         href='https://www.linkedin.com/in/martin-rodriguez-47796392/',
                                                                         style={'color':'white'}, 
                                                                         target="_blank"),
                                                                         autohide=False,
                                                                         target="tooltip-ln",
                                                                         style={'backgroundColor': 'rgb(85,85,255)'},
                                                               ),
                                                   ],
                                         ),
                                 ],
                       )
    elif pathname == "/page-1":
        return html.Div(children=[html.H2("Netflix challenge: Limitaciones", className="display-4"),
                                  html.Hr(),
                                  html.Div(children=[html.Li('El dataset original netflix_titles.csv contaba con 7787 registros. Fueron eliminados 2979 registros con valores nulos en las columnas director, cast, country, date_added y rating.'),
                                                    html.Br(),
                                                    html.Li('Para el análisis de duración de las movies/tv shows no se consideraron 135 casos cuya duración estaba expresada en temporadas en lugar de minutos.'),
                                                    html.Br(),
                                                    html.Li('De los 4808 registros usados para el analisis del dataset netflix_titles.csv sólo se pudieron mergear 1486 con los dataset de IMDB.'),
                                                    html.Br(),
                                                    html.Li('El año 2021 sólo cuenta con información de 5 meses.')
                                                    ],
                                          ),
                                  ],
                       ),
    elif pathname == "/page-2":
        return html.Div(children=[html.H2("Netflix challenge: Movies/TV Shows", className="display-4"),
                                  html.Hr(),
                                  html.Div('El siguiente treemap muestra la cantidad y concentración de movies y tv shows producidas por país. Las movies representan el 97% del total mientras que los tv shows sólo el 3%. Existe una concentración del 66% de movies producidas en 5 países: US, India, UK, Canada y Francia.'),
                                  html.Br(),
                                  html.Div(id='country',
                                           children='Choose a type: '),
                                  dcc.Dropdown(id='dropdown',
                                               options=[{'label':'Movies',
                                                         'value':'Movies'},
                                                        {'label':'TV Shows',
                                                         'value':'TV Shows'},
                                                        {'label':'Movies+TV Shows',
                                                         'value':'Movies/TV Shows'}
                                                       ],
                                               value='Movie',
                                               multi=False
                                             ),
                                  dcc.Graph(id='Grafico_1',
                                            figure=country_treemap)
                                ],
                       ),
    elif pathname == "/page-3":
        return html.Div(children=[html.H2("Netflix challenge: Titles per year", className="display-4"),
                                  html.Hr(),
                                  html.Div('El siguiente bar plot muestra la cantidad de títulos agregados por año desde el 2008 al 2021 abiertos por movies y tv shows. El año 2021 sólo cuenta con información de 5 meses.'),
                                  html.Br(),
                                  dcc.Graph(id='Grafico_2',
                                            figure=mtv_yearadded)
                                ],
                       ),
    elif pathname == "/page-4":
        return html.Div(children=[html.H2("Netflix challenge: Directors and Cast", className="display-4"),
                                  html.Hr(),
                                  html.Div('El top ten de cast concentra el 0.7% del total de títulos del dataset. El promedio de títulos por cast es de 1.63. Por ende no se observa concentración de títulos en pocos actores.'),
                                  html.Br(),
                                  html.Div('El top ten de directores concentra el 2.5% del total de títulos del dataset. El promedio de títulos por director es de 1.36. Por ende no se observa concentración de títulos en pocos directores.'),
                                 ],
                        ),
    elif pathname == "/page-5":
        return html.Div(children=[html.H2("Netflix challenge: Average Duration", className="display-4"),
                                  html.Hr(),
                                  html.Div('El siguiente line graph muestra el average de duración en minutos de los títulos desde 2008 al 2021 para el top 5 de países que representan el 65% del total de los títulos del dataset. Se excluyeron del análisis aquellos títulos cuya duración estuviera expresada en seasons.'),
                                  dcc.Graph(id='Grafico_3',
                                            figure=avg_min_line_country2)
                                 ],
                       ),
    elif pathname == "/page-6":
        return html.Div(children=[html.H2("Netflix challenge: Ratings class", className="display-4"),
                                  html.Hr(),
                                  html.Div(['El siguiente pie chart muestra la concentración de cada tipo de rating sobre el total de títulos desde 2008 al 2021. La siguiente página muestra el significado de cada uno de los ',
                                            html.Span('tipos de ratings.',
                                                      id="tooltip-ratings",
                                                      style={"textDecoration": "underline",
                                                             "cursor": "pointer"},
                                                     ),
                                            html.Span(' En base al significado de los tipos de ratings se puede observar que aproximadamente el 90% de las movies y tv shows de Netflix apuntan a un público adulto.'),
                                           ],
                                          ),
                                  dbc.Tooltip(
                                              html.A("Ratings meanings",
                                                     href='https://www.spectrum.net/support/tv/tv-and-movie-ratings-descriptions/',
                                                     style={'color':'white'}, 
                                                     target="_blank"),
                                                     autohide=False,
                                                     target="tooltip-ratings",
                                                     style={'backgroundColor': 'rgb(0,0,0)'},
                                                    ),
                                  dcc.Graph(id='Grafico_4',
                                            figure=pie_shows_rating)
                                 ],
                       ),
    elif pathname == "/page-7":
        return html.Div(children=[html.H2("Netflix challenge: Categories", className="display-4"),
                                  html.Hr(),
                                  html.Div('El siguiente wordcloud muestra las distintas categorías en las que se clasifican los títulos del dataset. La categoría "International Movies" es la que más se repite considerando que el 64% de los títulos pertenecen a países distintos a US.'),
                                  html.Br(),
                                  dbc.CardImg(src=wc_cat
                                             ),
                                 ],
                       ),
    elif pathname == "/page-8":
        return html.Div(children=[html.H2("Netflix challenge: Titles per country", className="display-4"),
                                  html.Hr(),
                                  html.Div('La siguiente data table muestra la cantidad de títulos agregados por año por país. Es posible filtrar y ordenar por cualquiera de las columnas.'),
                                  html.Br(),
                                  dash_table.DataTable(id='tabla',
                                                       data=df_shows_year_country.to_dict("records"),
                                                       columns=[{'name':i,'id':i,'selectable':True} for i in df_shows_year_country.columns],
                                                       filter_action='native',
                                                       sort_action='native',
                                                       sort_mode='multi',
                                                       page_current=0,
                                                       page_size=12,
                                                       style_header={'backgroundColor': '#eb6864',
                                                                     'color': 'white'
                                                                    },
                                                       style_cell={'font-family':'Arial'},
                                                       style_cell_conditional=[{'if': {'column_id': 'Country'},
                                                                                'textAlign': 'left'
                                                                               },
                                                                              ],
                                                       ),
                                 ],
                       ),
    elif pathname == "/page-9":
        return html.Div(children=[html.H2("Netflix challenge: Titles ratings",
                                          className="display-4"),
                                  html.Hr(),
                                  html.Div('La siguiente data table muestra los ratings y cantidad de votos en IMDB para los 1486 títulos incluidos en el dataset de Netflix. Es posible filtrar y ordenar por cualquiera de las columnas.'),
                                  html.Br(),
                                  dash_table.DataTable(id='tabla2',
                                                       data=nf_imdb_merge_final_found.to_dict("records"),
                                                       columns=[{'name':i,'id':i,
                                                                 'selectable':True} for i in ['Title',
                                                                                              'Release Year',
                                                                                              'Avg Rating',
                                                                                              'Votes',
                                                                                              'Stars']
                                                               ],
                                                       filter_action='native',
                                                       sort_action='native',
                                                       sort_mode='multi',
                                                       page_current=0,
                                                       page_size=12,
                                                       style_header={'backgroundColor': '#eb6864',
                                                                     'color': 'white'
                                                                    },
                                                       style_cell={'font-family':'Arial'},
                                                       style_cell_conditional=[{'if': {'column_id':'Title'},
                                                                                'textAlign': 'left'
                                                                               },
                                                                              ],
                                                       ),
                                 ],
                       ),
    # If the user tries to reach a different page, return a 404 message
    return dbc.Jumbotron(
        [
            html.H1("404: Not found", className="text-danger"),
            html.Hr(),
            html.P(f"The pathname {pathname} was not recognised..."),
        ]
    )

#Callback filter per movie/tv show:
@app.callback(Output(component_id='country', component_property='children'),
                      Input(component_id='dropdown', component_property='value'))
def update_output_dropdown(select_value):
    return 'Choose a type: '
    
#Callback graph
@app.callback(
    Output(component_id='Grafico_1',component_property='figure'),
    Input(component_id='dropdown',component_property='value')
)
def update_treemap(select_value):
  country_treemap=px.treemap(data_frame=df_shows_country[['Movies/TV Shows','country','Movies','TV Shows']],
                             path=[px.Constant('Total '+ select_value + ' produced per country'),'country'],
                             values=select_value)
  country_treemap.data[0].textinfo = 'label+value+percent parent'
  country_treemap.layout.hovermode = False
  country_treemap.update_layout(margin=dict(l=10,
                                          r=10,
                                          t=10,
                                          b=10)
                             )                      
  return country_treemap

if __name__ == '__main__':  
    app.run_server(port=8126, host='0.0.0.0')#8124,8125,8126,8050
